""" Plug
call plug#begin('~/.vim/plugged')
" some sensible defaults
Plug 'tpope/vim-sensible'
" awesome git wrapper
Plug 'tpope/vim-fugitive'
" ctrl+p file finder
Plug 'ctrlpvim/ctrlp.vim'
" filetree
Plug 'scrooloose/nerdtree'
" show git changes in gutter
Plug 'airblade/vim-gitgutter'
" fancy status line
Plug 'itchyny/lightline.vim'
" show syntax check output
Plug 'vim-syntastic/syntastic'
" multi cursor shenanigans
Plug 'terryma/vim-multiple-cursors'
" highlight bad ssl ciphers
Plug 'chr4/sslsecure.vim', { 'for': 'nginx' }
" nginx config support
Plug 'chr4/nginx.vim', { 'for': 'nginx' }
" support for .editorconfig
Plug 'editorconfig/editorconfig-vim'
" markdown highlighting
Plug 'plasticboy/vim-markdown'
" json support
Plug 'elzr/vim-json'
call plug#end()

" make sure editorconfig plays nice with fugitive
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" tweaks for lightline
set noshowmode
function! LightlineReadonly()
  return &readonly && &filetype !~# '\v(help|vimfiler|unite)' ? 'RO' : ''
endfunction
let g:unite_force_overwrite_statusline = 0
let g:vimfiler_force_overwrite_statusline = 0

""" personal extras

" shortcut for sudo write
command! W :execute ':silent w !sudo tee % > /dev/null' | :edit!
" toggle paste mode using F6
set pastetoggle=<F6>
" let find work recursively
set path+=**
" but ignore common vendor directories
set wildignore+=*/node_modules/*,*/vendor/*

augroup AutoCommands
  " reset
  autocmd!
  " remove any trailing whitespace in the file
  autocmd BufRead,BufWrite * if ! &bin | silent! %s/\s\+$//ge | endif
  " some nerdtree tweaks
  autocmd StdinReadPre * let s:std_in=1
  " open a NERDTree automatically when vim starts up if no files were specified
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
  " open NERDTree automatically when vim starts up on opening a directory
  autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
  " close vim if the only window left open is a NERDTree
  autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
augroup end
